// <auto-generated />
using System;
using Examen.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Examen.Infrastructure.Migrations
{
    [DbContext(typeof(ExamenContext))]
    [Migration("20231209202126_first")]
    partial class first
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Examen.ApplicationCore.Domaine.Fete", b =>
                {
                    b.Property<int>("FeteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeteId"));

                    b.Property<DateTime>("DateFete")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Duree")
                        .HasColumnType("int");

                    b.Property<int>("NbInvitesMax")
                        .HasColumnType("int");

                    b.Property<int>("SalleId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("FeteId");

                    b.HasIndex("SalleId");

                    b.ToTable("Fetes");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domaine.Invitation", b =>
                {
                    b.Property<int>("FeteFk")
                        .HasColumnType("int");

                    b.Property<int>("InviteFk")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateInvitation")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ConfirmeInvitation")
                        .HasColumnType("bit");

                    b.HasKey("FeteFk", "InviteFk", "DateInvitation");

                    b.HasIndex("InviteFk");

                    b.ToTable("Invitations");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domaine.Invite", b =>
                {
                    b.Property<int>("InviteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InviteId"));

                    b.Property<string>("AdresseInvite")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("InviteId");

                    b.ToTable("Invites");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domaine.Salle", b =>
                {
                    b.Property<int>("SalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalleId"));

                    b.Property<string>("AdresseSalle")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Capacite")
                        .HasColumnType("int");

                    b.Property<string>("NomSalle")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<double>("PrixParHeure")
                        .HasColumnType("float");

                    b.HasKey("SalleId");

                    b.ToTable("Salles");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domaine.Fete", b =>
                {
                    b.HasOne("Examen.ApplicationCore.Domaine.Salle", "Salle")
                        .WithMany("Fetes")
                        .HasForeignKey("SalleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Salle");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domaine.Invitation", b =>
                {
                    b.HasOne("Examen.ApplicationCore.Domaine.Fete", "Fete")
                        .WithMany("Invitations")
                        .HasForeignKey("FeteFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Examen.ApplicationCore.Domaine.Invite", "Invite")
                        .WithMany("Invitations")
                        .HasForeignKey("InviteFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fete");

                    b.Navigation("Invite");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domaine.Fete", b =>
                {
                    b.Navigation("Invitations");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domaine.Invite", b =>
                {
                    b.Navigation("Invitations");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domaine.Salle", b =>
                {
                    b.Navigation("Fetes");
                });
#pragma warning restore 612, 618
        }
    }
}
